# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

segmentItems:
  - serviceName: amqp
    segmentSize: 2
    segments:
      - segmentId: not null
        spans:
          - operationName: GET:/health
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 5004
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - { key: http.method, value: GET }
              - { key: url, value: 'service:8080/health' }
              - { key: status_code, value: '200' }
      - segmentId: not null
        spans:
          - operationName: AMQP/sw-queue-1/Producer
            parentSpanId: 0
            spanId: 1
            spanLayer: MQ
            startTime: nq 0
            endTime: nq 0
            componentId: 144
            isError: false
            spanType: Exit
            peer: amqp-server:5672
            skipAnalysis: false
            tags:
              - { key: mq.broker, value: 'amqp-server:5672' }
              - { key: mq.exchange, value: not null }
              - { key: mq.routing_key, value: sw-queue-1 }
          - operationName: AMQP/sw-queue-1/sw-consumer-1/Consumer
            parentSpanId: 0
            spanId: 2
            spanLayer: MQ
            startTime: nq 0
            endTime: nq 0
            componentId: 145
            isError: false
            spanType: Entry
            peer: amqp-server:5672
            skipAnalysis: false
            tags:
              - { key: mq.broker, value: 'amqp-server:5672' }
              - { key: mq.queue, value: sw-queue-1 }
              - { key: mq.msg.id, value: not null }
              - { key: mq.consumer_tag, value: sw-consumer-1 }
              - { key: mq.correlation_id, value: not null }
              - { key: mq.reply_to, value: not null }
              - { key: mq.args, value: not null }
            refs:
              - { parentEndpoint: 'GET:/execute', networkAddress: 'amqp-server:5672', refType: CrossProcess,
                  parentSpanId: 1, parentTraceSegmentId: not null,
                  parentServiceInstance: not null, parentService: amqp,
                  traceId: not null }
          - operationName: AMQP/sw-queue-2/Producer
            parentSpanId: 0
            spanId: 3
            spanLayer: MQ
            startTime: nq 0
            endTime: nq 0
            componentId: 144
            isError: false
            spanType: Exit
            peer: amqp-server:5672
            skipAnalysis: false
            tags:
              - { key: mq.broker, value: 'amqp-server:5672' }
              - { key: mq.exchange, value: not null }
              - { key: mq.routing_key, value: sw-queue-2 }
          - operationName: AMQP/sw-queue-2/sw-consumer-2/Consumer
            parentSpanId: 0
            spanId: 4
            spanLayer: MQ
            startTime: nq 0
            endTime: nq 0
            componentId: 145
            isError: false
            spanType: Entry
            peer: amqp-server:5672
            skipAnalysis: false
            tags:
              - { key: mq.broker, value: 'amqp-server:5672' }
              - { key: mq.queue, value: sw-queue-2 }
              - { key: mq.msg.id, value: not null }
              - { key: mq.consumer_tag, value: sw-consumer-2 }
              - { key: mq.correlation_id, value: not null }
              - { key: mq.reply_to, value: not null }
              - { key: mq.args, value: not null }
            refs:
              - { parentEndpoint: 'GET:/execute', networkAddress: 'amqp-server:5672', refType: CrossProcess,
                  parentSpanId: 3, parentTraceSegmentId: not null,
                  parentServiceInstance: not null, parentService: amqp,
                  traceId: not null }
          - operationName: GET:/execute
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 5004
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - { key: http.method, value: GET }
              - { key: url, value: 'service:8080/execute' }
              - { key: status_code, value: '200' }

meterItems: [ ]
logItems: [ ]