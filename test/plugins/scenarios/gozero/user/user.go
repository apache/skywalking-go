// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package user

import (
	"context"

	"test/plugins/scenarios/gozero/pb/userpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty       = userpb.Empty
	UserFindReq = userpb.UserFindReq
	UserInfo    = userpb.UserInfo
	UserSaveReq = userpb.UserSaveReq

	User interface {
		// user find
		UserFind(ctx context.Context, in *UserFindReq, opts ...grpc.CallOption) (*UserInfo, error)
		// user save
		UserSave(ctx context.Context, in *UserSaveReq, opts ...grpc.CallOption) (*UserInfo, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// user find
func (m *defaultUser) UserFind(ctx context.Context, in *UserFindReq, opts ...grpc.CallOption) (*UserInfo, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserFind(ctx, in, opts...)
}

// user save
func (m *defaultUser) UserSave(ctx context.Context, in *UserSaveReq, opts ...grpc.CallOption) (*UserInfo, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserSave(ctx, in, opts...)
}
