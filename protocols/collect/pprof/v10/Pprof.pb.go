//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: pprof/Pprof.proto

package v10

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	v3 "github.com/apache/skywalking-go/protocols/collect/common/v3"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PprofProfilingStatus int32

const (
	// PROFILING_SUCCESS indicates the Go Agent has finished the execution
	PprofProfilingStatus_PPROF_PROFILING_SUCCESS PprofProfilingStatus = 0
	// EXECUTION_TASK_ERROR indicates a potential execution error caused by the Go Agent, such as an error in the task parameters that were sent.
	PprofProfilingStatus_PPROF_EXECUTION_TASK_ERROR PprofProfilingStatus = 1
	// TERMINATED_BY_OVERSIZE means that the server cannot receive the pprof file because the size of the file is over the limitation.
	PprofProfilingStatus_PPROF_TERMINATED_BY_OVERSIZE PprofProfilingStatus = 2
)

// Enum value maps for PprofProfilingStatus.
var (
	PprofProfilingStatus_name = map[int32]string{
		0: "PPROF_PROFILING_SUCCESS",
		1: "PPROF_EXECUTION_TASK_ERROR",
		2: "PPROF_TERMINATED_BY_OVERSIZE",
	}
	PprofProfilingStatus_value = map[string]int32{
		"PPROF_PROFILING_SUCCESS":      0,
		"PPROF_EXECUTION_TASK_ERROR":   1,
		"PPROF_TERMINATED_BY_OVERSIZE": 2,
	}
)

func (x PprofProfilingStatus) Enum() *PprofProfilingStatus {
	p := new(PprofProfilingStatus)
	*p = x
	return p
}

func (x PprofProfilingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PprofProfilingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pprof_Pprof_proto_enumTypes[0].Descriptor()
}

func (PprofProfilingStatus) Type() protoreflect.EnumType {
	return &file_pprof_Pprof_proto_enumTypes[0]
}

func (x PprofProfilingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PprofProfilingStatus.Descriptor instead.
func (PprofProfilingStatus) EnumDescriptor() ([]byte, []int) {
	return file_pprof_Pprof_proto_rawDescGZIP(), []int{0}
}

type PprofData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metaData of the pprof task and its result data, only sent in the first request.
	Metadata *PprofMetaData `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are assignable to Result:
	//
	//	*PprofData_ErrorMessage
	//	*PprofData_Content
	Result isPprofData_Result `protobuf_oneof:"result"`
}

func (x *PprofData) Reset() {
	*x = PprofData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pprof_Pprof_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofData) ProtoMessage() {}

func (x *PprofData) ProtoReflect() protoreflect.Message {
	mi := &file_pprof_Pprof_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofData.ProtoReflect.Descriptor instead.
func (*PprofData) Descriptor() ([]byte, []int) {
	return file_pprof_Pprof_proto_rawDescGZIP(), []int{0}
}

func (x *PprofData) GetMetadata() *PprofMetaData {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *PprofData) GetResult() isPprofData_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *PprofData) GetErrorMessage() string {
	if x, ok := x.GetResult().(*PprofData_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (x *PprofData) GetContent() []byte {
	if x, ok := x.GetResult().(*PprofData_Content); ok {
		return x.Content
	}
	return nil
}

type isPprofData_Result interface {
	isPprofData_Result()
}

type PprofData_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3,oneof"`
}

type PprofData_Content struct {
	// pprof binary content
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3,oneof"`
}

func (*PprofData_ErrorMessage) isPprofData_Result() {}

func (*PprofData_Content) isPprofData_Result() {}

type PprofCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status PprofProfilingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=skywalking.v10.PprofProfilingStatus" json:"status,omitempty"`
}

func (x *PprofCollectionResponse) Reset() {
	*x = PprofCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pprof_Pprof_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofCollectionResponse) ProtoMessage() {}

func (x *PprofCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pprof_Pprof_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofCollectionResponse.ProtoReflect.Descriptor instead.
func (*PprofCollectionResponse) Descriptor() ([]byte, []int) {
	return file_pprof_Pprof_proto_rawDescGZIP(), []int{1}
}

func (x *PprofCollectionResponse) GetStatus() PprofProfilingStatus {
	if x != nil {
		return x.Status
	}
	return PprofProfilingStatus_PPROF_PROFILING_SUCCESS
}

type PprofMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service         string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	// pprof task id
	TaskId string `protobuf:"bytes,3,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// PprofProfilingStatus indicates the overall status of the pprof task, i.e. success or failure
	Type PprofProfilingStatus `protobuf:"varint,4,opt,name=type,proto3,enum=skywalking.v10.PprofProfilingStatus" json:"type,omitempty"`
	// if type is success then it will be the size of the pprof file, otherwise it will be 0
	ContentSize int32 `protobuf:"varint,5,opt,name=contentSize,proto3" json:"contentSize,omitempty"`
}

func (x *PprofMetaData) Reset() {
	*x = PprofMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pprof_Pprof_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofMetaData) ProtoMessage() {}

func (x *PprofMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_pprof_Pprof_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofMetaData.ProtoReflect.Descriptor instead.
func (*PprofMetaData) Descriptor() ([]byte, []int) {
	return file_pprof_Pprof_proto_rawDescGZIP(), []int{2}
}

func (x *PprofMetaData) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *PprofMetaData) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *PprofMetaData) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *PprofMetaData) GetType() PprofProfilingStatus {
	if x != nil {
		return x.Type
	}
	return PprofProfilingStatus_PPROF_PROFILING_SUCCESS
}

func (x *PprofMetaData) GetContentSize() int32 {
	if x != nil {
		return x.ContentSize
	}
	return 0
}

type PprofTaskCommandQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service name of the Go process
	Service         string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	// lastCommandTime is the timestamp of the last pprof task received
	LastCommandTime int64 `protobuf:"varint,3,opt,name=lastCommandTime,proto3" json:"lastCommandTime,omitempty"`
}

func (x *PprofTaskCommandQuery) Reset() {
	*x = PprofTaskCommandQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pprof_Pprof_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofTaskCommandQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofTaskCommandQuery) ProtoMessage() {}

func (x *PprofTaskCommandQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pprof_Pprof_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofTaskCommandQuery.ProtoReflect.Descriptor instead.
func (*PprofTaskCommandQuery) Descriptor() ([]byte, []int) {
	return file_pprof_Pprof_proto_rawDescGZIP(), []int{3}
}

func (x *PprofTaskCommandQuery) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *PprofTaskCommandQuery) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *PprofTaskCommandQuery) GetLastCommandTime() int64 {
	if x != nil {
		return x.LastCommandTime
	}
	return 0
}

var File_pprof_Pprof_proto protoreflect.FileDescriptor

var file_pprof_Pprof_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x2f, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x30, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x09, 0x50, 0x70,
	0x72, 0x6f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6b, 0x79, 0x77,
	0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x30, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x57,
	0x0a, 0x17, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x6b, 0x79, 0x77,
	0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x30, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x50, 0x70, 0x72, 0x6f,
	0x66, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x30, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x75, 0x0a, 0x14, 0x50, 0x70, 0x72,
	0x6f, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x1e,
	0x0a, 0x1a, 0x50, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x20,
	0x0a, 0x1c, 0x50, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x02,
	0x32, 0xb6, 0x01, 0x0a, 0x09, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x51,
	0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x6b, 0x79, 0x77,
	0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x30, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x27, 0x2e, 0x73, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x30, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x56, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x2e, 0x73, 0x6b, 0x79, 0x77,
	0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x30, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x66,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x17, 0x2e, 0x73, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x42, 0x84, 0x01, 0x0a, 0x2b, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x73, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x70, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x76, 0x31, 0x30, 0x50, 0x01, 0x5a, 0x32, 0x73, 0x6b, 0x79,
	0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x67, 0x6f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x2f, 0x76, 0x31, 0x30, 0xaa,
	0x02, 0x1e, 0x53, 0x6b, 0x79, 0x57, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x31, 0x30,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pprof_Pprof_proto_rawDescOnce sync.Once
	file_pprof_Pprof_proto_rawDescData = file_pprof_Pprof_proto_rawDesc
)

func file_pprof_Pprof_proto_rawDescGZIP() []byte {
	file_pprof_Pprof_proto_rawDescOnce.Do(func() {
		file_pprof_Pprof_proto_rawDescData = protoimpl.X.CompressGZIP(file_pprof_Pprof_proto_rawDescData)
	})
	return file_pprof_Pprof_proto_rawDescData
}

var file_pprof_Pprof_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pprof_Pprof_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pprof_Pprof_proto_goTypes = []interface{}{
	(PprofProfilingStatus)(0),       // 0: skywalking.v10.PprofProfilingStatus
	(*PprofData)(nil),               // 1: skywalking.v10.PprofData
	(*PprofCollectionResponse)(nil), // 2: skywalking.v10.PprofCollectionResponse
	(*PprofMetaData)(nil),           // 3: skywalking.v10.PprofMetaData
	(*PprofTaskCommandQuery)(nil),   // 4: skywalking.v10.PprofTaskCommandQuery
	(*v3.Commands)(nil),             // 5: skywalking.v3.Commands
}
var file_pprof_Pprof_proto_depIdxs = []int32{
	3, // 0: skywalking.v10.PprofData.metadata:type_name -> skywalking.v10.PprofMetaData
	0, // 1: skywalking.v10.PprofCollectionResponse.status:type_name -> skywalking.v10.PprofProfilingStatus
	0, // 2: skywalking.v10.PprofMetaData.type:type_name -> skywalking.v10.PprofProfilingStatus
	1, // 3: skywalking.v10.PprofTask.collect:input_type -> skywalking.v10.PprofData
	4, // 4: skywalking.v10.PprofTask.getPprofTaskCommands:input_type -> skywalking.v10.PprofTaskCommandQuery
	2, // 5: skywalking.v10.PprofTask.collect:output_type -> skywalking.v10.PprofCollectionResponse
	5, // 6: skywalking.v10.PprofTask.getPprofTaskCommands:output_type -> skywalking.v3.Commands
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pprof_Pprof_proto_init() }
func file_pprof_Pprof_proto_init() {
	if File_pprof_Pprof_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pprof_Pprof_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pprof_Pprof_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pprof_Pprof_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pprof_Pprof_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofTaskCommandQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pprof_Pprof_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PprofData_ErrorMessage)(nil),
		(*PprofData_Content)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pprof_Pprof_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pprof_Pprof_proto_goTypes,
		DependencyIndexes: file_pprof_Pprof_proto_depIdxs,
		EnumInfos:         file_pprof_Pprof_proto_enumTypes,
		MessageInfos:      file_pprof_Pprof_proto_msgTypes,
	}.Build()
	File_pprof_Pprof_proto = out.File
	file_pprof_Pprof_proto_rawDesc = nil
	file_pprof_Pprof_proto_goTypes = nil
	file_pprof_Pprof_proto_depIdxs = nil
}
